# .clang-format
# LUMA Engine C++ code formatting configuration
# Based on LLVM style with functional programming preferences

---
Language: Cpp
BasedOnStyle: LLVM

# Indentation
IndentWidth: 4
TabWidth: 4
UseTab: Never
ContinuationIndentWidth: 4
IndentCaseLabels: true
IndentPPDirectives: BeforeHash
IndentWrappedFunctionNames: false

# Line breaking
ColumnLimit: 100
BreakBeforeBraces: Attach
AlwaysBreakAfterReturnType: None
AlwaysBreakTemplateDeclarations: Yes
BreakConstructorInitializers: BeforeColon
BreakInheritanceList: BeforeColon
BreakStringLiterals: true

# Alignment
AlignAfterOpenBracket: Align
AlignConsecutiveAssignments: false
AlignConsecutiveDeclarations: false
AlignEscapedNewlines: Left
AlignOperands: true
AlignTrailingComments: true

# Spacing
SpaceAfterCStyleCast: false
SpaceAfterTemplateKeyword: true
SpaceBeforeAssignmentOperators: true
SpaceBeforeCpp11BracedList: false
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: ControlStatements
SpaceBeforeRangeBasedForLoopColon: true
SpaceInEmptyParentheses: false
SpacesInAngles: false
SpacesInCStyleCastParentheses: false
SpacesInContainerLiterals: false
SpacesInParentheses: false
SpacesInSquareBrackets: false

# Pointers and references
DerivePointerAlignment: false
PointerAlignment: Left

# Sorting
SortIncludes: CaseSensitive
SortUsingDeclarations: true

# Namespaces
CompactNamespaces: false
FixNamespaceComments: true
NamespaceIndentation: None

# Functions
AllowShortFunctionsOnASingleLine: Inline
AllowShortLambdasOnASingleLine: All
BinPackArguments: true
BinPackParameters: true

# Control flow
AllowShortBlocksOnASingleLine: Empty
AllowShortCaseLabelsOnASingleLine: false
AllowShortIfStatementsOnASingleLine: Never
AllowShortLoopsOnASingleLine: false

# Comments
ReflowComments: true

# Includes
IncludeBlocks: Regroup
IncludeCategories:
  # Main module header
  - Regex: '^"luma/'
    Priority: 1
  # C system headers
  - Regex: '^<(assert|complex|ctype|errno|fenv|float|inttypes|iso646|limits|locale|math|setjmp|signal|stdalign|stdarg|stdatomic|stdbool|stddef|stdint|stdio|stdlib|stdnoreturn|string|tgmath|threads|time|uchar|wchar|wctype)\.h>'
    Priority: 2
  # C++ system headers
  - Regex: '^<(algorithm|any|array|atomic|barrier|bit|bitset|charconv|chrono|compare|complex|concepts|condition_variable|coroutine|deque|exception|execution|expected|filesystem|format|forward_list|fstream|functional|future|initializer_list|iomanip|ios|iosfwd|iostream|istream|iterator|latch|limits|list|locale|map|mdspan|memory|memory_resource|mutex|new|numbers|numeric|optional|ostream|queue|random|ranges|ratio|regex|scoped_allocator|semaphore|set|shared_mutex|source_location|span|spanstream|sstream|stack|stacktrace|stdexcept|stdfloat|stop_token|streambuf|string|string_view|strstream|syncstream|system_error|thread|tuple|type_traits|typeindex|typeinfo|unordered_map|unordered_set|utility|valarray|variant|vector|version)>'
    Priority: 3
  # Vulkan headers
  - Regex: '^<(vulkan|vk_mem_alloc)\.h>'
    Priority: 4
  # External library headers
  - Regex: '^<(glm|GLFW|imgui|yaml-cpp)/'
    Priority: 5
  # Everything else
  - Regex: '.*'
    Priority: 6

# Penalties (fine-tuning line breaking)
PenaltyBreakAssignment: 100
PenaltyBreakBeforeFirstCallParameter: 50
PenaltyBreakComment: 300
PenaltyBreakFirstLessLess: 120
PenaltyBreakString: 1000
PenaltyExcessCharacter: 1000000
PenaltyReturnTypeOnItsOwnLine: 200

# Other
Standard: c++26
...
