# .clang-tidy
# LUMA Engine static analysis configuration
# Focus on functional programming, modern C++, and safety

---
Checks: >
  -*,
  bugprone-*,
  -bugprone-easily-swappable-parameters,
  -bugprone-exception-escape,
  cert-*,
  -cert-err58-cpp,
  clang-analyzer-*,
  concurrency-*,
  cppcoreguidelines-*,
  -cppcoreguidelines-avoid-magic-numbers,
  -cppcoreguidelines-avoid-c-arrays,
  -cppcoreguidelines-pro-bounds-array-to-pointer-decay,
  -cppcoreguidelines-pro-bounds-constant-array-index,
  -cppcoreguidelines-pro-bounds-pointer-arithmetic,
  -cppcoreguidelines-pro-type-reinterpret-cast,
  -cppcoreguidelines-non-private-member-variables-in-classes,
  hicpp-*,
  -hicpp-avoid-c-arrays,
  -hicpp-no-array-decay,
  -hicpp-signed-bitwise,
  misc-*,
  -misc-non-private-member-variables-in-classes,
  -misc-no-recursion,
  modernize-*,
  -modernize-use-trailing-return-type,
  -modernize-avoid-c-arrays,
  performance-*,
  portability-*,
  readability-*,
  -readability-magic-numbers,
  -readability-identifier-length,
  -readability-function-cognitive-complexity

WarningsAsErrors: '*'

HeaderFilterRegex: 'include/luma/.*\.hpp'

CheckOptions:
  # Naming conventions
  - key: readability-identifier-naming.NamespaceCase
    value: lower_case
  - key: readability-identifier-naming.ClassCase
    value: CamelCase
  - key: readability-identifier-naming.StructCase
    value: CamelCase
  - key: readability-identifier-naming.EnumCase
    value: CamelCase
  - key: readability-identifier-naming.FunctionCase
    value: lower_case
  - key: readability-identifier-naming.VariableCase
    value: lower_case
  - key: readability-identifier-naming.ConstantCase
    value: UPPER_CASE
  - key: readability-identifier-naming.ParameterCase
    value: lower_case
  - key: readability-identifier-naming.MemberCase
    value: lower_case
  - key: readability-identifier-naming.PrivateMemberSuffix
    value: '_'
  - key: readability-identifier-naming.ProtectedMemberSuffix
    value: '_'
  - key: readability-identifier-naming.TemplateParameterCase
    value: CamelCase
  
  # Code size limits
  - key: readability-function-size.LineThreshold
    value: '150'
  - key: readability-function-size.StatementThreshold
    value: '200'
  - key: readability-function-size.ParameterThreshold
    value: '8'
  
  # Modernize options
  - key: modernize-use-nullptr.NullMacros
    value: 'NULL'
  - key: modernize-use-auto.MinTypeNameLength
    value: '5'
  
  # Performance options
  - key: performance-move-const-arg.CheckTriviallyCopyableMove
    value: 'true'
  - key: performance-unnecessary-value-param.AllowedTypes
    value: 'std::shared_ptr;std::unique_ptr;std::function'
  
  # Readability options
  - key: readability-braces-around-statements.ShortStatementLines
    value: '0'
  - key: readability-implicit-bool-conversion.AllowPointerConditions
    value: 'true'
  - key: readability-implicit-bool-conversion.AllowIntegerConditions
    value: 'false'
  
  # Avoid unnecessary copies
  - key: performance-unnecessary-copy-initialization.AllowedTypes
    value: ''
  
  # Modern C++ features
  - key: modernize-use-default-member-init.UseAssignment
    value: 'true'
  - key: modernize-use-emplace.ContainersWithPushBack
    value: 'std::vector;std::deque;std::list'
  
  # Safety checks
  - key: cppcoreguidelines-special-member-functions.AllowSoleDefaultDtor
    value: 'true'
  - key: cppcoreguidelines-special-member-functions.AllowMissingMoveFunctions
    value: 'false'
...
